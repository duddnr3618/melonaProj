buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.test'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}
//allprojects {
//	repositories {
//
//		maven { url 'https://jitpack.io' }
//	}
//}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//DevTool
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//TestTool
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//편의성
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	//Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'


	//Spring Setting
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Query
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	runtimeOnly 'com.mysql:mysql-connector-j'

	//JavaScript
	implementation 'org.webjars.bower:jquery:3.7.0'

	//QueryDslSetting
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	implementation "com.querydsl:querydsl-core:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	implementation "com.querydsl:querydsl-codegen:${queryDslVersion}"

	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.1.1'

	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	//json
	implementation group: 'org.json', name: 'json', version: '20230618'
//	//google
//	implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
//	implementation 'org.python:jython-installer:2.7.3'
//
//	implementation 'org.springframework.boot:spring-boot-starter-websocket'
//	implementation 'com.github.KwabenBerko:News-API-Java:1.0.2'
////
//	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
//	implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.9'

//주식 테스트
//
//	implementation 'com.github.crazzyghost:alphavantage-java:1.6.0'
//	implementation 'com.github.crazzyghost:alphavantage-java:x.y.z'
//	testImplementation group: 'junit', name: 'junit', version: '4.12'
//	testImplementation 'com.github.gmazzo:okhttp-mock:1.3.2'
//	testImplementation 'com.squareup.okhttp3:logging-interceptor:4.5.0'
//	implementation 'com.squareup.okhttp3:okhttp:4.5.0'
//	implementation 'com.squareup.moshi:moshi:1.9.2'

//	implementation "com.querydsl:querydsl-core:${queryDslVersion}"


}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
	source = file(querydslDir)
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

//If the file exists during compilation, an error occurs. Therefore added
compileQuerydsl.doFirst {
	if (file(querydslDir).exists())
		delete(file(querydslDir))
}

tasks.named('test') {
	useJUnitPlatform()
}